/*

Fiind necesară setarea/verificarea permisiunilor pentru utilizatorii
unei aplicații, și presupunând că informațiile legate de permisiune (per
utilizator) pot fi salvate doar într-o variabilă de dimeniunea unui octet
(limitări de memorie), să se implementeze funcții pentru setarea și
verificarea permisiunilor unui anumit utilizator. Există 5 tipuri de
permisiuni: Read/Write/Delete/Rename/Copy.

*/

#include <stdio.h>
#include<stdlib.h>

int main()
{
	int n,x=0;
	printf("Set the permission (0-not allowed, 1-allowed)\n");
	printf("Read: "); 
	scanf("%d", &n);
	if (n == 1) x = x | (1 << 0);
	printf("Write:");
	scanf("%d", &n);
	if (n == 1) x = x | (1 << 1);
	printf("Delete: ");
	scanf("%d", &n);
	if (n == 1) x = x | (1 << 2);
	printf("Rename: ");
	scanf("%d", &n);
	if (n == 1) x = x | (1 << 3);
	printf("Copy: ");
	scanf("%d", &n);
	if (n == 1) x = x | (1 << 4);

	if (1 == 1 & (x >> 0)) printf("Reading is allowed\n");
	else printf("Reading isn't allowed\n");

	if (1 == 1 & (x >> 1)) printf("Writing is allowed\n");
	else printf("Writing isn't allowed\n");

	if (1 == 1 & (x >> 2))printf("Deleting is allowed\n");
	else printf("Deleting isn't allowed\n");
	
  if (1 == 1 & (x >> 3))printf("Renaming is allowed\n");
	else printf("Renaming isn't allowed\n");
  
  if (1 == 1 & (x >> 4))printf("Çopying is allowed\n");
	else printf("Copying isn't allowed\n");
  
	system("pause");
	return 0;
}
